@model CarWebSite.Models.User

@{
    ViewData["Title"] = "Sign Up";
}

<h2 class="text-center my-4">Sign Up</h2>

<div class="container d-flex justify-content-center">
    <div class="card p-4" style="width: 100%; max-width: 600px;">
        <form asp-action="SignUp" method="post">
            <div class="mb-3">
                <label asp-for="UserName" class="form-label"></label>
                <input asp-for="UserName" class="form-control" required />
            </div>

            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" type="email" required />
            </div>

            <div class="mb-3">
                <label asp-for="Password" class="form-label"></label>
                <input asp-for="Password" class="form-control" type="password" required />
            </div>

            <div class="mb-3">
                <label for="ConfirmPassword" class="form-label">Confirm Password</label>
                <input name="ConfirmPassword" class="form-control" type="password" required />
            </div>

            <div class="mb-3">
                <label asp-for="PhoneNumber" class="form-label"></label>
                <input asp-for="PhoneNumber" class="form-control" type="tel" required />
            </div>

            <div class="mb-3">
                <label asp-for="Location" class="form-label"></label>
                <input asp-for="Location" class="form-control" required />
            </div>

            <div class="mb-3 form-check">
                <input asp-for="IsSeller" class="form-check-input" type="checkbox" required />
                <label class="form-check-label" for="IsSeller">Seller</label>
            </div>


            <div class="mb-3">
                <label asp-for="Role" class="form-label"></label>
                <select asp-for="Role" class="form-select" required>
                    <option value="">Select Role</option>
                    <option>User</option>
                    <option>Admin</option>
                    <option>Moderator</option>
                </select>
            </div>

            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-block">Sign Up</button>
            </div>
        </form>
    </div>
</div>




<script>
    document.addEventListener('DOMContentLoaded', function () {
        const passwordInput = document.querySelector('input[name="Password"]');
        const confirmPasswordInput = document.querySelector('input[name="ConfirmPassword"]');
        const passwordFeedback = document.createElement('div');
        passwordFeedback.classList.add('password-feedback');
        passwordInput.parentElement.appendChild(passwordFeedback);

        passwordInput.addEventListener('input', function () {
            const password = passwordInput.value;
            let feedbackMessage = '';
            let isValid = true;

            if (password.length < 8) {
                feedbackMessage = 'Password must be at least 8 characters.';
                isValid = false;
            } else if (!/[A-Z]/.test(password)) {
                feedbackMessage = 'Password must contain at least one uppercase letter.';
                isValid = false;
            } else if (!/[a-z]/.test(password)) {
                feedbackMessage = 'Password must contain at least one lowercase letter.';
                isValid = false;
            } else if (!/\d/.test(password)) {
                feedbackMessage = 'Password must contain at least one digit.';
                isValid = false;
            } else {
                feedbackMessage = 'Password is strong.';
            }

            passwordFeedback.textContent = feedbackMessage;
            passwordFeedback.style.color = isValid ? 'green' : 'red';
        });

        // Check if Confirm Password matches
        confirmPasswordInput.addEventListener('input', function () {
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;

            if (password !== confirmPassword) {
                confirmPasswordInput.setCustomValidity('Passwords do not match.');
            } else {
                confirmPasswordInput.setCustomValidity('');
            }
        });
    });
</script>

<style>
/* Style for the sign-up button */
.btn-primary {
    background-color: #6E4331;
    border-color: #6E4331;
    color: white;
    padding: 10px 20px;
    font-size: 16px;
    font-weight: bold;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.btn-primary:hover {
    background-color: #994C2B;
    border-color: #994C2B;
}

/* Style for the text fields */
.form-control {
    border: 2px solid #45322A;
    border-radius: 15px;
    padding: 10px;
    font-size: 16px;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.form-control:focus {
    border-color: #007bff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

/* Style for the frame */
.card {
    border: 1px solid #ddd;
    border-radius: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    background-color: #FFF0EA;
}
</style>
